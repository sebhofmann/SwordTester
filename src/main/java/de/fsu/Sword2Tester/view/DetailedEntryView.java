/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.fsu.Sword2Tester.view;

import de.fsu.Sword2Tester.Utils;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.apache.abdera.model.Entry;
import org.swordapp.client.Content;
import org.swordapp.client.Deposit;
import org.swordapp.client.ProtocolViolationException;
import org.swordapp.client.SWORDClient;
import org.swordapp.client.SWORDClientException;
import org.swordapp.client.SWORDError;
import org.swordapp.client.UriRegistry;

/**
 *
 * @author sebastian
 */
public class DetailedEntryView extends javax.swing.JPanel {

    /**
     * Creates new form DetailedEntryView
     */
    public DetailedEntryView() {
        initComponents();
    }

    private org.apache.abdera.model.Entry entry;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        entryXMLPane = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        setLayout(new java.awt.GridLayout(0, 1));

        entryXMLPane.setEditable(false);
        jScrollPane3.setViewportView(entryXMLPane);

        add(jScrollPane3);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButton1.setText("Deposit to Selected");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Get Deposit from Selected");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton3.setText("Delete Selected");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel2.add(jButton3);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (jList1.getSelectedValue() instanceof org.apache.abdera.model.Link) {
            org.apache.abdera.model.Link link = (org.apache.abdera.model.Link) jList1.getSelectedValue();

            JFileChooser fc = new JFileChooser();
            int returnVal = fc.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                final File[] selectedFiles = fc.getSelectedFiles();
                InputStream is = null;
                String fileName = null;
                MessageDigest md5 = getMD5();

                if (selectedFiles.length == 0) {
                    final File selectedFile = fc.getSelectedFile();
                    fileName = selectedFile.getName();

                    final Path filePath = selectedFile.toPath();
                    try {
                        is = Files.newInputStream(filePath);
                    } catch (IOException ex) {
                        Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
                        if(is!=null){
                            try {
                                is.close();
                            } catch (IOException e) {
                                Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } else {

                }

                if (is != null) {
                    SWORDClient cli = new SWORDClient();
                    final Deposit deposit = new Deposit();
                    deposit.setFile(is);
                    deposit.setFilename(fileName);
                    if(fileName.endsWith(".zip")){
                        deposit.setPackaging(UriRegistry.PACKAGE_SIMPLE_ZIP);
                        deposit.setMimeType("application/zip");
                    } else {
                        deposit.setPackaging(UriRegistry.PACKAGE_BINARY);
                    }
                    deposit.setMetadataRelevant(false);

                    try {
                        String href = link.getHref().toString();
                        if(href.contains("edit-medida")){
                            cli.addToMediaResource(href, deposit, Utils.getDefaultAuth());
                        } else {
                            cli.addToContainer(href, deposit, Utils.getDefaultAuth());
                            //cli.replace(href, deposit, Utils.getDefaultAuth());
                        }
                    } catch (SWORDClientException | ProtocolViolationException | SWORDError ex) {
                        Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private MessageDigest getMD5() {
        try {
            return MessageDigest.getInstance("MD5");
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        if (jList1.getSelectedValue() instanceof org.apache.abdera.model.Link) {
            try {
                org.apache.abdera.model.Link link = (org.apache.abdera.model.Link) jList1.getSelectedValue();
                SWORDClient cli = new SWORDClient();

                final Content content = cli.getFile(link.getHref().toString(), "", Utils.getDefaultAuth());
                final JFileChooser fc = new JFileChooser();
                fc.setAcceptAllFileFilterUsed(false);
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Simple ZIP", "zip");
                fc.setFileFilter(filter);

                int returnVal = fc.showSaveDialog(this);

                if (returnVal == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    Files.copy(content.getInputStream(), file.toPath());
                }
            } catch (SWORDClientException | SWORDError | ProtocolViolationException | IOException ex) {
                Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        try {
            org.apache.abdera.model.Link link = (org.apache.abdera.model.Link) jList1.getSelectedValue();
            SWORDClient cli = new SWORDClient();
            if(link.getHref().toString().contains("edit-media")){
                cli.deleteFile(link.getHref().toString(),Utils.getDefaultAuth());
            } else {
                cli.delete(link.getHref().toString(),Utils.getDefaultAuth());
            }
        } catch (SWORDClientException | ProtocolViolationException | SWORDError ex) {
            Logger.getLogger(DetailedEntryView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3MouseClicked

    private org.apache.abdera.model.Entry sourceEntry;

    public Entry getEntry() {
        return entry;
    }

    public void setEntry(Entry entry) {
        this.entry = entry;
        try {
            this.update();
        } catch (IOException e) {
            // best practice
        }
    }

    private void update() throws IOException {
        if (entry != null) {
            final ByteArrayOutputStream out = new ByteArrayOutputStream();
            SWORDClient cli = new SWORDClient();
            DefaultListModel lm = new DefaultListModel();

            final Entry entry = this.entry;
            entry.getLinks().forEach(link -> lm.addElement(link));
            this.jList1.setModel(lm);

            entry.writeTo("prettyxml", out);


            this.entryXMLPane.setText(new String(out.toByteArray(), StandardCharsets.UTF_8));
        } else {
            this.entryXMLPane.setText("");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane entryXMLPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
